# .github/workflows/build-hhvm.yml
# Builds HHVM from the code in this repository using an Ubuntu 20.04 container.

name: Build HHVM from Local Repo

# This allows the workflow to be triggered manually from the Actions tab.
on:
  workflow_dispatch:

jobs:
  build:
    name: Build HHVM
    # This targets your specific, dynamically-named self-hosted runner.
    runs-on:
      - codebuild-karunscloud-hhvm-build-${{ github.run_id }}-${{ github.run_attempt }}

    # All steps will still execute inside this container on the runner.
    container:
      image: ubuntu:20.04

    steps:
      # Step 1: Install all dependencies.
      - name: Install Dependencies
        run: |
          # Set the codename for Ubuntu 20.04.
          UBUNTU_CODENAME=focal
          
          # Prevent interactive prompts during installation.
          export DEBIAN_FRONTEND=noninteractive

          apt-get update -y
          apt-get install -y --no-install-recommends \
            ca-certificates \
            curl \
            git \
            cmake \
            make \
            g++ \
            gnupg \
            software-properties-common \
            libheif-dev # <-- FIX IS HERE: Add the missing HEIF development library.

          echo "Adding HHVM repository..."
          install -d -m 0755 /usr/share/keyrings
          curl -fsSL https://dl.hhvm.com/conf/hhvm.gpg.key | gpg --dearmor -o /usr/share/keyrings/hhvm.gpg
          
          # Add the Ubuntu repository for both binary (deb) and source (deb-src).
          tee /etc/apt/sources.list.d/hhvm.list <<EOF
          deb [signed-by=/usr/share/keyrings/hhvm.gpg] https://dl.hhvm.com/ubuntu ${UBUNTU_CODENAME} main
          deb-src [signed-by=/usr/share/keyrings/hhvm.gpg] https://dl.hhvm.com/ubuntu ${UBUNTU_CODENAME} main
          EOF
          
          apt-get update -y
          apt-get build-dep -y hhvm-nightly

      # Step 2: Check out the repository code.
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # Step 3: Build the code.
      - name: Build HHVM
        run: |
          echo "Building HHVM from local repository... ⏳"
          mkdir -p build
          cd build
          cmake -DMYSQL_UNIX_SOCK_ADDR=/var/run/mysqld/mysqld.sock ..
          make -j$(nproc)

      # Step 4: Upload the final build as an artifact.
      - name: Upload HHVM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hhvm-build-ubuntu2004
          path: build/
